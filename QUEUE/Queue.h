#pragma once
#include <iostream>
using namespace std;

/*
   Добавить в класс "Односвязный список" следующие функции :
	  удаление узла по заданной позиции,
	  удаление последнего узла,
	  поиск заданного узла (функция возвращает позицию найденного узла в случае успеха или NULL в случае неудачи).
*/
struct Node
{
	// Данные
	char data;
	// Адрес следующего узла списка
	Node* Next;
};

// Односвязный список
class List
{
	// Адрес головного (начального) узла списка
	Node* Head;
	// Адрес последнего узла списка
	Node* Tail;
	// Количество узлов списка
	int Count;

public:
	// Конструктор
	List();
	// Деструктор
	~List();

	// Добавление узла в список
	// (Новый элемент становится последним)
	void Add(char data);

	// Удаление узла списка
	// (Удаляется головной (начальный) узел)
	void Del();

	// Удаление узла списка по индексу
	void DelInd(int index);

	// Удаление последнего узла
	void DelEnd();

	// Удаление всего списка
	void DelAll();

	// Распечатка содержимого списка
	// (Распечатка начинается с головного элемента)
	void Print();

	// Получение количества элементов, находящихся в списке
	int GetCount();

	// Поиск заданного узла
	int GetInd(char a);

	// Вставка узла в определённое заданное место списка 
	void AddIndex(char new_data, int index)  // Z, 2
	{
		Node* temp = Head;
		int i = 1;
		while (i < index)
		{
			temp = temp->Next;
			i++;
		}
		Node* NewNode = new Node;
		NewNode->data = new_data;

		// Настройка связей
		NewNode->Next = temp->Next;
		temp->Next = NewNode;
		Count++;
	}
};
